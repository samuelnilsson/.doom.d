#+title: Config

* UI

** Theme

#+begin_src emacs-lisp
(setq doom-theme 'doom-tokyo-night)
#+end_src

** Window

Enable line numbers.

#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src

** Opacity

#+begin_src emacs-lisp :tangle yes
(add-to-list 'default-frame-alist '(alpha . 98))
#+end_src

** Spacing

Increase line spacing for some breathing room.

#+begin_src emacs-lisp
(setq-default line-spacing 3)
#+end_src

** Font

*** Families

#+begin_src emacs-lisp :tangle yes
(setq doom-font (font-spec :family "Iosevka Nerd Font" :size 16)
      doom-variable-pitch-font (font-spec :family "Iosevka Aile" :size 16)
      doom-symbol-font (font-spec :family "Noto Sans Symbols")
      doom-emoji-font (font-spec :family "Noto Emoji")
      doom-serif-font (font-spec :family "Iosevka Etoile" :size 16)
      doom-big-font (font-spec :family "Iosevka Nerd Font" :size 24))
#+end_src

*** Mixed pitch

Enable mixed pitch for org-mode and markdown-mode, to have mono fonts for code and variable pitch font for text.

#+begin_src emacs-lisp :tangle yes
(setq +enabled-mixed-pitch-modes '(org-mode markdown-mode))
(dolist (hook +enabled-mixed-pitch-modes)
  (add-hook (intern (concat (symbol-name hook) "-hook")) #'mixed-pitch-mode))
#+end_src

* Org mode

** Directory

Set directory for org files.

#+begin_src emacs-lisp
(setq org-directory "~/wiki/")
(setq org-roam-directory "~/wiki/roam/")
#+end_src

** GTD

*** Capture templates

#+begin_src emacs-lisp
(after! org
    (setq org-capture-templates
          '(("t" "TODO" entry (file "inbox.org")
             "* TODO %?\n%i\n%a" :prepend t))))
#+end_src

*** Agenda files

Define org files to include in the agenda.

#+begin_src emacs-lisp
(setq org-gtd-agenda-files (list "inbox.org" "gtd.org" "tickler.org" "someday.org"))
#+end_src

Set custom todo keywords.

#+begin_src emacs-lisp
(after! org
    (setq org-todo-keywords '((sequence "TODO(t)" "PROG(i)" "WAIT(w)" "|" "DONE(d)" "CNCL(c)"))
          org-todo-keywords-for-agenda '((sequence "TODO(t)" "PROG(i)" "WAIT(w)" "|" "DONE(d)" "CNCL(c)"))))
#+end_src

** Autosave

Autosave org buffers to avoid syncthing conflicts.

#+begin_src emacs-lisp :tangle yes
(add-hook 'auto-save-hook 'org-save-all-org-buffers)
#+end_src

** Prettify

Hide emphasis markers, such as markers for bold and cursive text.

#+begin_src emacs-lisp :tangle yes
(setq org-hide-emphasis-markers "t")
#+end_src

* Keybindings

** Mac

Switch modifier keys on mac to be consistent with linux.

#+begin_src emacs-lisp :tangle yes
(setq mac-command-modifier 'control)
(setq mac-control-modifier 'super)
#+end_src

* Other

** Revert buffer automatically

Automatically revert a buffer when the underlying file changes on disk.

#+begin_src emacs-lisp :tangle yes
(global-auto-revert-mode 1)
#+end_src

** SSH

*** Tramp

Make tramp find all executables on remote nixOS systems.

#+begin_src emacs-lisp
(after! tramp
  (add-to-list 'tramp-remote-path 'tramp-own-remote-path))
#+end_src

** Rest client

#+begin_src emacs-lisp :tangle yes
(use-package! verb
    :hook
    (verb-mode . (lambda () (setq-local network-stream-use-client-certificates t)))
    :config
    (setq verb-auto-kill-response-buffers t))
#+end_src

** Copilot

Enable copilot when enabled by the environment variable *DOOM_COPILOT_ENABLE*.
Remap tab to prioritize copilot over /corfu/ completion.

Setting /copilot-version/ to /nil/ makes copilot.el use the Microsoft official language server protocol for copilot.

#+begin_src emacs-lisp
(use-package! copilot
  :if (string-equal (getenv "DOOM_COPILOT_ENABLE") "t")
  :hook (csharp-mode . copilot-mode)
  :config (setq copilot-version nil)
  :bind (:map copilot-completion-map
        ("<tab>" . 'copilot-accept-completion)
        ("tab" . 'copilot-accept-completion)
        ("c-tab" . 'copilot-accept-completion-by-word)
        ("c-<tab>" . 'copilot-accept-completion-by-word)))
#+end_src
